//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceKeysEndpoint
{
        [TestMethod]
        public void ListAllServiceKeysTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""91bb4eee-484d-4bdc-bdb1-5a574c013715"",
        ""url"": ""/v2/service_keys/e523f015-ac16-454d-b522-030768884414"",
        ""created_at"": ""2016-02-11T13:20:44Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1686"",
        ""service_instance_guid"": ""91bb4eee-484d-4bdc-bdb1-5a574c013715"",
        ""credentials"": {
          ""creds-key-462"": ""creds-val-462""
        },
        ""service_instance_url"": ""/v2/service_instances/34e4edac-b1ff-4cc2-9314-6e9739d35c6c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceKeys.ListAllServiceKeys().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("91bb4eee-484d-4bdc-bdb1-5a574c013715", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_keys/e523f015-ac16-454d-b522-030768884414", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-11T13:20:44Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1686", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("91bb4eee-484d-4bdc-bdb1-5a574c013715", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("/v2/service_instances/34e4edac-b1ff-4cc2-9314-6e9739d35c6c", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceKeyTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""caf5cd0f-e629-4045-b320-4bae9c906a15"",
    ""url"": ""/v2/service_keys/f9c8c4f4-92b9-4ece-af77-acf6dca0d88b"",
    ""created_at"": ""2016-02-11T13:20:44Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1673"",
    ""service_instance_guid"": ""caf5cd0f-e629-4045-b320-4bae9c906a15"",
    ""credentials"": {
      ""creds-key-457"": ""creds-val-457""
    },
    ""service_instance_url"": ""/v2/service_instances/2cecf5e2-f6ed-4221-8309-462009d05407""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceKeys.RetrieveServiceKey(guid).Result;


                Assert.AreEqual("caf5cd0f-e629-4045-b320-4bae9c906a15", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_keys/f9c8c4f4-92b9-4ece-af77-acf6dca0d88b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-11T13:20:44Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1673", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("caf5cd0f-e629-4045-b320-4bae9c906a15", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("/v2/service_instances/2cecf5e2-f6ed-4221-8309-462009d05407", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceKeyTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""ab92b732-ac3c-4611-9429-c63c3dd59700"",
    ""url"": ""/v2/service_keys/bf518577-ca49-4a2a-8851-9b01bf06840e"",
    ""created_at"": ""2016-02-11T13:20:44Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1699"",
    ""service_instance_guid"": ""ab92b732-ac3c-4611-9429-c63c3dd59700"",
    ""credentials"": {
      ""creds-key-466"": ""creds-val-466""
    },
    ""service_instance_url"": ""/v2/service_instances/c6069f2f-a2b3-468c-83a4-896ba06b7841""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceKeyRequest value = new CreateServiceKeyRequest();


                var obj = cfClient.ServiceKeys.CreateServiceKey(value).Result;


                Assert.AreEqual("ab92b732-ac3c-4611-9429-c63c3dd59700", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_keys/bf518577-ca49-4a2a-8851-9b01bf06840e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-11T13:20:44Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1699", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("ab92b732-ac3c-4611-9429-c63c3dd59700", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("/v2/service_instances/c6069f2f-a2b3-468c-83a4-896ba06b7841", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceKeyTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServiceKeys.DeleteServiceKey(guid).Wait();

            }
        }

    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedTest
    {


        [TestMethod]
        public void TestCreateDomainOwnedByGivenOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c63b5b03-0026-4dff-9f68-ca83885c3e07"",
    ""url"": ""/v2/domains/0598ce23-a3ac-4b8c-8e68-989a395f4504"",
    ""created_at"": ""2016-02-11T13:20:33Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""c63b5b03-0026-4dff-9f68-ca83885c3e07"",
    ""shared_organizations"": [

    ],
    ""owning_organization_url"": ""/v2/organizations/d4471864-1f5f-4023-b6ee-d6b12c17f477"",
    ""spaces_url"": ""/v2/domains/0598ce23-a3ac-4b8c-8e68-989a395f4504/spaces""
  }
}";

            CreateDomainOwnedByGivenOrganizationDeprecatedResponse obj = Utilities.DeserializeJson<CreateDomainOwnedByGivenOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("c63b5b03-0026-4dff-9f68-ca83885c3e07", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/0598ce23-a3ac-4b8c-8e68-989a395f4504", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:33Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("c63b5b03-0026-4dff-9f68-ca83885c3e07", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/d4471864-1f5f-4023-b6ee-d6b12c17f477", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/0598ce23-a3ac-4b8c-8e68-989a395f4504/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForDomainDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0e2c9173-77da-4262-a2a9-9eb3f7a4eba2"",
        ""url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2"",
        ""created_at"": ""2016-02-11T13:20:33Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1185"",
        ""organization_guid"": ""0e2c9173-77da-4262-a2a9-9eb3f7a4eba2"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/31724cf2-4eb2-48a4-ad48-a1b5dee65575"",
        ""developers_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/developers"",
        ""managers_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/managers"",
        ""auditors_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/auditors"",
        ""apps_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/apps"",
        ""routes_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/routes"",
        ""domains_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/domains"",
        ""service_instances_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/service_instances"",
        ""app_events_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/app_events"",
        ""events_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/events"",
        ""security_groups_url"": ""/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForDomainDeprecatedResponse> page = Utilities.DeserializePage<ListAllSpacesForDomainDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0e2c9173-77da-4262-a2a9-9eb3f7a4eba2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:33Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1185", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("0e2c9173-77da-4262-a2a9-9eb3f7a4eba2", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/31724cf2-4eb2-48a4-ad48-a1b5dee65575", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/49f04fb0-2031-4fb5-b484-cceb4ccf0ea2/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f11f05e9-9b8d-4d61-9ebf-dbe24478c185"",
    ""url"": ""/v2/domains/8ccd6c84-e5ed-4e97-9ade-83a9583c3208"",
    ""created_at"": ""2016-02-11T13:20:33Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-30.example.com"",
    ""router_group_guid"": null
  }
}";

            RetrieveDomainDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveDomainDeprecatedResponse>(json);

            Assert.AreEqual("f11f05e9-9b8d-4d61-9ebf-dbe24478c185", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/8ccd6c84-e5ed-4e97-9ade-83a9583c3208", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:33Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-30.example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c43b187d-a2d0-4b5d-a5ea-55d4fb077712"",
    ""url"": ""/v2/domains/c165bd8a-d6cf-4d14-95c5-5c4df1c4825b"",
    ""created_at"": ""2016-02-11T13:20:33Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null,
    ""shared_organizations"": [

    ]
  }
}";

            CreateSharedDomainDeprecatedResponse obj = Utilities.DeserializeJson<CreateSharedDomainDeprecatedResponse>(json);

            Assert.AreEqual("c43b187d-a2d0-4b5d-a5ea-55d4fb077712", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/c165bd8a-d6cf-4d14-95c5-5c4df1c4825b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:33Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllDomainsDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c"",
        ""url"": ""/v2/domains/dde794bb-114b-4be7-af29-633411c456ea"",
        ""created_at"": ""2016-02-11T13:20:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c"",
        ""url"": ""/v2/domains/54c555fb-bab4-447c-a9a0-0268bf6bc8fb"",
        ""created_at"": ""2016-02-11T13:20:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c"",
        ""url"": ""/v2/domains/ca82530a-ddb3-47f9-abdb-e872186f5b78"",
        ""created_at"": ""2016-02-11T13:20:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c"",
        ""owning_organization_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29"",
        ""spaces_url"": ""/v2/domains/ca82530a-ddb3-47f9-abdb-e872186f5b78/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c"",
        ""url"": ""/v2/domains/b0a34666-6d67-4e63-be66-ca6dc9ff74e3"",
        ""created_at"": ""2016-02-11T13:20:33Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-29.example.com"",
        ""router_group_guid"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsDeprecatedResponse>(json, null);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/dde794bb-114b-4be7-af29-633411c456ea", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/54c555fb-bab4-447c-a9a0-0268bf6bc8fb", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:23Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/ca82530a-ddb3-47f9-abdb-e872186f5b78", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:23Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/ca82530a-ddb3-47f9-abdb-e872186f5b78/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("8c1669b2-3e0d-4cd5-9fd8-0dff237ba13c", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/b0a34666-6d67-4e63-be66-ca6dc9ff74e3", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:33Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-29.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
        }
    }
}

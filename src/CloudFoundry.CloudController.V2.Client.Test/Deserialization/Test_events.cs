//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9d79ae5e-2d0c-49f4-93c1-42ee26cfd529"",
        ""url"": ""/v2/events/9829f18d-a121-46aa-8256-3d093027758b"",
        ""created_at"": ""2016-02-11T13:20:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-18"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b1dfc255-6690-423c-bbd4-8da9d4328a52"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-132"",
        ""timestamp"": ""2016-02-11T13:20:25Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""9d79ae5e-2d0c-49f4-93c1-42ee26cfd529"",
        ""organization_guid"": ""9d79ae5e-2d0c-49f4-93c1-42ee26cfd529""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9d79ae5e-2d0c-49f4-93c1-42ee26cfd529", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9829f18d-a121-46aa-8256-3d093027758b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-18", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b1dfc255-6690-423c-bbd4-8da9d4328a52", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-132", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9d79ae5e-2d0c-49f4-93c1-42ee26cfd529", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9d79ae5e-2d0c-49f4-93c1-42ee26cfd529", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b83c0b10-8521-4e28-8abc-db0ac771bb5a"",
        ""url"": ""/v2/events/cc55d2da-ce34-47e1-8312-a8609945c90d"",
        ""created_at"": ""2016-02-11T13:20:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""66e1c1f2-a5ed-4507-8893-a4a4db8fda22"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-247"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-02-11T13:20:25Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b83c0b10-8521-4e28-8abc-db0ac771bb5a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cc55d2da-ce34-47e1-8312-a8609945c90d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("66e1c1f2-a5ed-4507-8893-a4a4db8fda22", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-247", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""57cb8897-30cf-4403-a406-9aa0ddb9a524"",
        ""url"": ""/v2/events/cac1c3a8-73ee-404e-b4a8-c0fe36535af2"",
        ""created_at"": ""2016-02-11T13:20:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-38"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""4c9bdaca-45e4-4e7a-a746-6ca24374b240"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-421"",
        ""timestamp"": ""2016-02-11T13:20:26Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("57cb8897-30cf-4403-a406-9aa0ddb9a524", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cac1c3a8-73ee-404e-b4a8-c0fe36535af2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-38", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("4c9bdaca-45e4-4e7a-a746-6ca24374b240", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-421", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a701a12f-dbca-4645-a1a1-368aa86d75f1"",
        ""url"": ""/v2/events/f32144bb-1af7-4543-adc4-8a08013c2cb3"",
        ""created_at"": ""2016-02-11T13:20:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-30"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ce1e40d2-8330-4a38-a131-d2dce95344ae"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-02-11T13:20:26Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a701a12f-dbca-4645-a1a1-368aa86d75f1""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a701a12f-dbca-4645-a1a1-368aa86d75f1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/f32144bb-1af7-4543-adc4-8a08013c2cb3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-30", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ce1e40d2-8330-4a38-a131-d2dce95344ae", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a701a12f-dbca-4645-a1a1-368aa86d75f1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cd84b76c-8b89-4af7-b175-df0f5dca259a"",
        ""url"": ""/v2/events/fcc864cf-6af5-479b-8d91-843f38769564"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-50"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""337e66f4-03c5-4045-ad5a-c3de0e3bcf62"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-582"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""cd84b76c-8b89-4af7-b175-df0f5dca259a"",
        ""organization_guid"": ""cd84b76c-8b89-4af7-b175-df0f5dca259a""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cd84b76c-8b89-4af7-b175-df0f5dca259a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fcc864cf-6af5-479b-8d91-843f38769564", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-50", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("337e66f4-03c5-4045-ad5a-c3de0e3bcf62", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-582", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("cd84b76c-8b89-4af7-b175-df0f5dca259a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("cd84b76c-8b89-4af7-b175-df0f5dca259a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshAuthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1ec025dd-f61f-4ac2-82db-35e2b35d5bf4"",
        ""url"": ""/v2/events/77bd3407-ea07-4228-88a8-1a56eedb9cc4"",
        ""created_at"": ""2016-02-11T13:20:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-authorized"",
        ""actor"": ""uaa-id-28"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9ade805e-8cfa-4a75-bfd6-5f456bb85618"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-272"",
        ""timestamp"": ""2016-02-11T13:20:26Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""1ec025dd-f61f-4ac2-82db-35e2b35d5bf4"",
        ""organization_guid"": ""1ec025dd-f61f-4ac2-82db-35e2b35d5bf4""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshAuthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshAuthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1ec025dd-f61f-4ac2-82db-35e2b35d5bf4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/77bd3407-ea07-4228-88a8-1a56eedb9cc4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-authorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-28", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9ade805e-8cfa-4a75-bfd6-5f456bb85618", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-272", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("1ec025dd-f61f-4ac2-82db-35e2b35d5bf4", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1ec025dd-f61f-4ac2-82db-35e2b35d5bf4", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a7e5014f-b656-44ae-b8c5-281a752cbd3f"",
        ""url"": ""/v2/events/395596d3-f5c9-4191-825a-0afcd97653e5"",
        ""created_at"": ""2016-02-11T13:20:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-24"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""3439911e-35b6-410e-9426-f99a9512be4d"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-218"",
        ""timestamp"": ""2016-02-11T13:20:25Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-218"",
            ""space_guid"": ""a7e5014f-b656-44ae-b8c5-281a752cbd3f""
          }
        },
        ""space_guid"": ""a7e5014f-b656-44ae-b8c5-281a752cbd3f"",
        ""organization_guid"": ""a7e5014f-b656-44ae-b8c5-281a752cbd3f""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a7e5014f-b656-44ae-b8c5-281a752cbd3f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/395596d3-f5c9-4191-825a-0afcd97653e5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-24", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3439911e-35b6-410e-9426-f99a9512be4d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-218", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("a7e5014f-b656-44ae-b8c5-281a752cbd3f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a7e5014f-b656-44ae-b8c5-281a752cbd3f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5d7a2ae1-35d4-40b9-894b-673ceb2deebb"",
        ""url"": ""/v2/events/1601fc61-be33-49ad-87b5-bec3d203bcd0"",
        ""created_at"": ""2016-02-11T13:20:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-66"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""dd7b83e4-e5bc-4598-bdd7-080a48cafdc7"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-805"",
        ""timestamp"": ""2016-02-11T13:20:28Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""5d7a2ae1-35d4-40b9-894b-673ceb2deebb"",
        ""organization_guid"": ""5d7a2ae1-35d4-40b9-894b-673ceb2deebb""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5d7a2ae1-35d4-40b9-894b-673ceb2deebb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1601fc61-be33-49ad-87b5-bec3d203bcd0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-66", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("dd7b83e4-e5bc-4598-bdd7-080a48cafdc7", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-805", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("5d7a2ae1-35d4-40b9-894b-673ceb2deebb", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("5d7a2ae1-35d4-40b9-894b-673ceb2deebb", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3dd79b6b-32bc-4853-a44e-862e9b16c342"",
        ""url"": ""/v2/events/841766e8-9f4a-4b0f-bfa5-9430c1c732e9"",
        ""created_at"": ""2016-02-11T13:20:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""da85b60c-31a7-4169-bdc7-37569f606794"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-972"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2016-02-11T13:20:29Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""3dd79b6b-32bc-4853-a44e-862e9b16c342"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3dd79b6b-32bc-4853-a44e-862e9b16c342", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/841766e8-9f4a-4b0f-bfa5-9430c1c732e9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("da85b60c-31a7-4169-bdc7-37569f606794", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-972", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""acef657b-d8be-4208-b7fe-cd87859aab1c"",
        ""url"": ""/v2/events/a8d0ebc1-58e2-4d44-93ec-112b1e7b0198"",
        ""created_at"": ""2016-02-11T13:20:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-82"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5101c177-f548-40e5-9a35-3ed906cfa502"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1022"",
        ""timestamp"": ""2016-02-11T13:20:30Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""acef657b-d8be-4208-b7fe-cd87859aab1c""
          }
        },
        ""space_guid"": ""acef657b-d8be-4208-b7fe-cd87859aab1c"",
        ""organization_guid"": ""acef657b-d8be-4208-b7fe-cd87859aab1c""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("acef657b-d8be-4208-b7fe-cd87859aab1c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a8d0ebc1-58e2-4d44-93ec-112b1e7b0198", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-82", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("5101c177-f548-40e5-9a35-3ed906cfa502", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1022", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:30Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("acef657b-d8be-4208-b7fe-cd87859aab1c", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("acef657b-d8be-4208-b7fe-cd87859aab1c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStopEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""88b03ff2-a397-4890-ae04-6524a43d7d03"",
        ""url"": ""/v2/events/8366d099-6528-4a65-a10f-67aad94affe0"",
        ""created_at"": ""2016-02-11T13:20:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-60"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""f2d74cac-6d2b-4bd9-8995-d48b62cb7028"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-726"",
        ""timestamp"": ""2016-02-11T13:20:28Z"",
        ""metadata"": {

        },
        ""space_guid"": ""88b03ff2-a397-4890-ae04-6524a43d7d03"",
        ""organization_guid"": ""88b03ff2-a397-4890-ae04-6524a43d7d03""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStopEventsResponse> page = Utilities.DeserializePage<ListAppStopEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("88b03ff2-a397-4890-ae04-6524a43d7d03", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8366d099-6528-4a65-a10f-67aad94affe0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-60", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f2d74cac-6d2b-4bd9-8995-d48b62cb7028", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-726", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("88b03ff2-a397-4890-ae04-6524a43d7d03", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("88b03ff2-a397-4890-ae04-6524a43d7d03", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c8678a64-67f7-4034-8fc4-a0bc8b3a0cc0"",
    ""url"": ""/v2/events/e63aff6d-7aee-4725-ba36-f0f0a5285d8e"",
    ""created_at"": ""2016-02-11T13:20:25Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-55"",
    ""actor"": ""ad47fa7c-1d51-45d2-a128-4a6ea658a129"",
    ""actor_type"": ""name-56"",
    ""actor_name"": ""name-57"",
    ""actee"": ""b897859f-aa0d-4083-86ea-b55522a0dcbd"",
    ""actee_type"": ""name-58"",
    ""actee_name"": ""name-59"",
    ""timestamp"": ""2016-02-11T13:20:25Z"",
    ""metadata"": {

    },
    ""space_guid"": ""c8678a64-67f7-4034-8fc4-a0bc8b3a0cc0"",
    ""organization_guid"": ""c8678a64-67f7-4034-8fc4-a0bc8b3a0cc0""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("c8678a64-67f7-4034-8fc4-a0bc8b3a0cc0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e63aff6d-7aee-4725-ba36-f0f0a5285d8e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-55", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("ad47fa7c-1d51-45d2-a128-4a6ea658a129", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-56", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-57", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("b897859f-aa0d-4083-86ea-b55522a0dcbd", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-58", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-59", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("c8678a64-67f7-4034-8fc4-a0bc8b3a0cc0", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("c8678a64-67f7-4034-8fc4-a0bc8b3a0cc0", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""53089ae9-765f-45c2-9a01-489abf20d818"",
        ""url"": ""/v2/events/fd1f2d91-4d8c-4ca8-a5d5-1169e148a7b2"",
        ""created_at"": ""2016-02-11T13:20:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""01f4e5ff-34b5-4107-888e-fed6e2d54d4d"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-161"",
        ""actee"": ""a76a063e-f5c6-4fb1-bbd7-db052c884f2e"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2016-02-11T13:20:25Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("53089ae9-765f-45c2-9a01-489abf20d818", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/fd1f2d91-4d8c-4ca8-a5d5-1169e148a7b2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("01f4e5ff-34b5-4107-888e-fed6e2d54d4d", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-161", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a76a063e-f5c6-4fb1-bbd7-db052c884f2e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""175dd551-6b11-4849-9a27-a299b8103f26"",
        ""url"": ""/v2/events/e0efb66e-3ad7-46e5-b3ee-0b1a3919c3b0"",
        ""created_at"": ""2016-02-11T13:20:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""38021b9f-a04f-435b-afe1-a67c074c4f08"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1053"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2016-02-11T13:20:30Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("175dd551-6b11-4849-9a27-a299b8103f26", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e0efb66e-3ad7-46e5-b3ee-0b1a3919c3b0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("38021b9f-a04f-435b-afe1-a67c074c4f08", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1053", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:30Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dd99ba8f-b816-4785-a613-afc1aad1c1c8"",
        ""url"": ""/v2/events/8ca1658d-6e78-4832-9dbf-c3882efa7268"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-42"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""85c40cb3-65cf-402f-85a0-d52efedb7654"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-475"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""dd99ba8f-b816-4785-a613-afc1aad1c1c8"",
        ""organization_guid"": ""dd99ba8f-b816-4785-a613-afc1aad1c1c8""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dd99ba8f-b816-4785-a613-afc1aad1c1c8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8ca1658d-6e78-4832-9dbf-c3882efa7268", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-42", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("85c40cb3-65cf-402f-85a0-d52efedb7654", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-475", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("dd99ba8f-b816-4785-a613-afc1aad1c1c8", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("dd99ba8f-b816-4785-a613-afc1aad1c1c8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bcf44ca3-f9d9-40ee-9370-29381cd14bc8"",
        ""url"": ""/v2/events/20d2a1a0-32fc-44cd-82a9-bf16c07d8011"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-48"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""fcc3a262-ff40-461d-8ba0-7011bf025e7d"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""bcf44ca3-f9d9-40ee-9370-29381cd14bc8"",
            ""organization_guid"": ""bcf44ca3-f9d9-40ee-9370-29381cd14bc8""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""bcf44ca3-f9d9-40ee-9370-29381cd14bc8""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bcf44ca3-f9d9-40ee-9370-29381cd14bc8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/20d2a1a0-32fc-44cd-82a9-bf16c07d8011", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-48", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("fcc3a262-ff40-461d-8ba0-7011bf025e7d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("bcf44ca3-f9d9-40ee-9370-29381cd14bc8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""968eeecc-b0c2-4274-9969-01f7c3f4e8ed"",
        ""url"": ""/v2/events/83589495-15e5-4ff6-b70a-98db533fd73d"",
        ""created_at"": ""2016-02-11T13:20:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-64"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""5ca7e7db-9679-4b30-93c4-284a7a3cf560"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-780"",
        ""timestamp"": ""2016-02-11T13:20:28Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("968eeecc-b0c2-4274-9969-01f7c3f4e8ed", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/83589495-15e5-4ff6-b70a-98db533fd73d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-64", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("5ca7e7db-9679-4b30-93c4-284a7a3cf560", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-780", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""890b3fc9-fa8e-4fcc-a414-dd93528a494f"",
        ""url"": ""/v2/events/8c1a9b76-2d77-425a-9875-b53480284d7f"",
        ""created_at"": ""2016-02-11T13:20:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-22"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c357becc-e576-4fa5-97d8-185bcbdce7d8"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-02-11T13:20:25Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""890b3fc9-fa8e-4fcc-a414-dd93528a494f"",
            ""app_guid"": ""890b3fc9-fa8e-4fcc-a414-dd93528a494f""
          }
        },
        ""space_guid"": ""890b3fc9-fa8e-4fcc-a414-dd93528a494f"",
        ""organization_guid"": ""890b3fc9-fa8e-4fcc-a414-dd93528a494f""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("890b3fc9-fa8e-4fcc-a414-dd93528a494f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8c1a9b76-2d77-425a-9875-b53480284d7f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-22", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c357becc-e576-4fa5-97d8-185bcbdce7d8", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("890b3fc9-fa8e-4fcc-a414-dd93528a494f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("890b3fc9-fa8e-4fcc-a414-dd93528a494f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""675d7d77-4b2c-47e3-8fed-40bbd14f1748"",
        ""url"": ""/v2/events/da5b195a-8c1d-4dbc-8089-cf80fec5882d"",
        ""created_at"": ""2016-02-11T13:20:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""7b929be7-f9f5-498b-be31-8f7e5f93b22c"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-754"",
        ""actee"": ""d49e78bf-9c39-4a84-9c9b-c690c0cc5771"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-755"",
        ""timestamp"": ""2016-02-11T13:20:28Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("675d7d77-4b2c-47e3-8fed-40bbd14f1748", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/da5b195a-8c1d-4dbc-8089-cf80fec5882d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("7b929be7-f9f5-498b-be31-8f7e5f93b22c", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-754", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d49e78bf-9c39-4a84-9c9b-c690c0cc5771", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-755", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""18062a5d-91e2-4035-b8a6-b11ddb489f97"",
        ""url"": ""/v2/events/97ccd760-3392-45ff-a04d-6f274f89d1bb"",
        ""created_at"": ""2016-02-11T13:20:25Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""9c889a3a-ba53-49c9-87b7-b38be912aa02"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-103"",
        ""actee"": ""9c889a3a-ba53-49c9-87b7-b38be912aa02"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-103"",
        ""timestamp"": ""2016-02-11T13:20:25Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""18062a5d-91e2-4035-b8a6-b11ddb489f97"",
        ""organization_guid"": ""18062a5d-91e2-4035-b8a6-b11ddb489f97""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("18062a5d-91e2-4035-b8a6-b11ddb489f97", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/97ccd760-3392-45ff-a04d-6f274f89d1bb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("9c889a3a-ba53-49c9-87b7-b38be912aa02", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-103", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9c889a3a-ba53-49c9-87b7-b38be912aa02", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-103", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:25Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("18062a5d-91e2-4035-b8a6-b11ddb489f97", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("18062a5d-91e2-4035-b8a6-b11ddb489f97", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6f1df26f-c792-4679-9472-b31932099ad0"",
        ""url"": ""/v2/events/85249a50-93bf-408f-ae63-6e400dd87871"",
        ""created_at"": ""2016-02-11T13:20:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.delete"",
        ""actor"": ""uaa-id-34"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c3926a50-dba9-4d91-86f9-a7b81f5d0875"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-364"",
        ""timestamp"": ""2016-02-11T13:20:26Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""6f1df26f-c792-4679-9472-b31932099ad0"",
        ""organization_guid"": ""6f1df26f-c792-4679-9472-b31932099ad0""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceKeyDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6f1df26f-c792-4679-9472-b31932099ad0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/85249a50-93bf-408f-ae63-6e400dd87871", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-34", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c3926a50-dba9-4d91-86f9-a7b81f5d0875", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-364", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("6f1df26f-c792-4679-9472-b31932099ad0", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6f1df26f-c792-4679-9472-b31932099ad0", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ea276180-2501-4501-93d5-5c9248174931"",
        ""url"": ""/v2/events/4105d769-7703-4036-be84-0a628ceae851"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-44"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""540eb32c-3896-429b-9bc1-d9a017bd86d7"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-502"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""ea276180-2501-4501-93d5-5c9248174931"",
        ""organization_guid"": ""ea276180-2501-4501-93d5-5c9248174931""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ea276180-2501-4501-93d5-5c9248174931", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4105d769-7703-4036-be84-0a628ceae851", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-44", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("540eb32c-3896-429b-9bc1-d9a017bd86d7", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-502", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ea276180-2501-4501-93d5-5c9248174931", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("ea276180-2501-4501-93d5-5c9248174931", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1936d38f-3553-49c5-905d-3ec15ba9908a"",
        ""url"": ""/v2/events/ceed7448-e11b-4004-9da2-1598c7a5dbec"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-52"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""bfadeab4-aeed-45a5-a7fb-65ad55a1a230"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-609"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""1936d38f-3553-49c5-905d-3ec15ba9908a"",
        ""organization_guid"": ""1936d38f-3553-49c5-905d-3ec15ba9908a""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1936d38f-3553-49c5-905d-3ec15ba9908a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ceed7448-e11b-4004-9da2-1598c7a5dbec", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-52", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("bfadeab4-aeed-45a5-a7fb-65ad55a1a230", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-609", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("1936d38f-3553-49c5-905d-3ec15ba9908a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1936d38f-3553-49c5-905d-3ec15ba9908a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStartEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""74d2699a-b46c-42d2-a217-afb6e8fb5197"",
        ""url"": ""/v2/events/4acb0551-c918-4a4d-925c-4f3021e23125"",
        ""created_at"": ""2016-02-11T13:20:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-76"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d800dbf3-479a-4f72-96fb-fe91720d163a"",
        ""actee_type"": ""v3-app"",
        ""actee_name"": ""name-944"",
        ""timestamp"": ""2016-02-11T13:20:29Z"",
        ""metadata"": {

        },
        ""space_guid"": ""74d2699a-b46c-42d2-a217-afb6e8fb5197"",
        ""organization_guid"": ""74d2699a-b46c-42d2-a217-afb6e8fb5197""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStartEventsResponse> page = Utilities.DeserializePage<ListAppStartEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("74d2699a-b46c-42d2-a217-afb6e8fb5197", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/4acb0551-c918-4a4d-925c-4f3021e23125", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-76", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d800dbf3-479a-4f72-96fb-fe91720d163a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("v3-app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-944", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("74d2699a-b46c-42d2-a217-afb6e8fb5197", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("74d2699a-b46c-42d2-a217-afb6e8fb5197", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceKeyCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a9354359-ee4c-427d-8d29-a184d778d665"",
        ""url"": ""/v2/events/38443640-4cff-4af4-857c-b480e3c844bd"",
        ""created_at"": ""2016-02-11T13:20:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_key.create"",
        ""actor"": ""uaa-id-54"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""2c975537-b13a-4c1e-b4c9-81445ea9095a"",
        ""actee_type"": ""service_key"",
        ""actee_name"": ""name-643"",
        ""timestamp"": ""2016-02-11T13:20:28Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""a9354359-ee4c-427d-8d29-a184d778d665"",
            ""name"": ""name-643""
          }
        },
        ""space_guid"": ""a9354359-ee4c-427d-8d29-a184d778d665"",
        ""organization_guid"": ""a9354359-ee4c-427d-8d29-a184d778d665""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceKeyCreateEventsResponse> page = Utilities.DeserializePage<ListServiceKeyCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a9354359-ee4c-427d-8d29-a184d778d665", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/38443640-4cff-4af4-857c-b480e3c844bd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_key.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-54", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("2c975537-b13a-4c1e-b4c9-81445ea9095a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_key", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-643", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("a9354359-ee4c-427d-8d29-a184d778d665", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a9354359-ee4c-427d-8d29-a184d778d665", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""094de079-c039-4929-94c5-a782f290704a"",
        ""url"": ""/v2/events/8559c054-1a11-466a-b081-bf4261db63fe"",
        ""created_at"": ""2016-02-11T13:20:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-31"",
        ""actor"": ""5374d118-4208-4904-b7d5-8cc4ec4f84ea"",
        ""actor_type"": ""name-32"",
        ""actor_name"": ""name-33"",
        ""actee"": ""12ea8539-a489-4b47-91a9-d31d6f29813f"",
        ""actee_type"": ""name-34"",
        ""actee_name"": ""name-35"",
        ""timestamp"": ""2016-02-11T13:20:24Z"",
        ""metadata"": {

        },
        ""space_guid"": ""094de079-c039-4929-94c5-a782f290704a"",
        ""organization_guid"": ""094de079-c039-4929-94c5-a782f290704a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""094de079-c039-4929-94c5-a782f290704a"",
        ""url"": ""/v2/events/0adadd0e-9be6-41e9-a1f2-d14e31b4ddb0"",
        ""created_at"": ""2016-02-11T13:20:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-39"",
        ""actor"": ""b86734eb-bde3-45c9-8083-b2d05be000b6"",
        ""actor_type"": ""name-40"",
        ""actor_name"": ""name-41"",
        ""actee"": ""92b5c4c2-d50d-40a8-9ca4-659daeaccf27"",
        ""actee_type"": ""name-42"",
        ""actee_name"": ""name-43"",
        ""timestamp"": ""2016-02-11T13:20:24Z"",
        ""metadata"": {

        },
        ""space_guid"": ""094de079-c039-4929-94c5-a782f290704a"",
        ""organization_guid"": ""094de079-c039-4929-94c5-a782f290704a""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""094de079-c039-4929-94c5-a782f290704a"",
        ""url"": ""/v2/events/a6dd69fe-99eb-44de-b18d-02e3e82eb408"",
        ""created_at"": ""2016-02-11T13:20:24Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-47"",
        ""actor"": ""6eea85b9-dbc4-4bb0-8959-fbb67f39f981"",
        ""actor_type"": ""name-48"",
        ""actor_name"": ""name-49"",
        ""actee"": ""a229b403-4476-437c-b42d-596280c35015"",
        ""actee_type"": ""name-50"",
        ""actee_name"": ""name-51"",
        ""timestamp"": ""2016-02-11T13:20:24Z"",
        ""metadata"": {

        },
        ""space_guid"": ""094de079-c039-4929-94c5-a782f290704a"",
        ""organization_guid"": ""094de079-c039-4929-94c5-a782f290704a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8559c054-1a11-466a-b081-bf4261db63fe", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:24Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-31", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("5374d118-4208-4904-b7d5-8cc4ec4f84ea", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-32", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-33", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("12ea8539-a489-4b47-91a9-d31d6f29813f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-34", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-35", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:24Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0adadd0e-9be6-41e9-a1f2-d14e31b4ddb0", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:24Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-39", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("b86734eb-bde3-45c9-8083-b2d05be000b6", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-40", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-41", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("92b5c4c2-d50d-40a8-9ca4-659daeaccf27", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-42", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-43", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:24Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a6dd69fe-99eb-44de-b18d-02e3e82eb408", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:24Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-47", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("6eea85b9-dbc4-4bb0-8959-fbb67f39f981", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-48", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-49", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("a229b403-4476-437c-b42d-596280c35015", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-50", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-51", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:24Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("094de079-c039-4929-94c5-a782f290704a", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2e9917a3-52cd-4b39-8247-b9b27106c77f"",
        ""url"": ""/v2/events/786e61f4-71f3-4efd-a3b1-5f598e47a8a9"",
        ""created_at"": ""2016-02-11T13:20:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-58"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""dbdc4767-3439-4e75-8636-a6162c416a58"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2016-02-11T13:20:28Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""2e9917a3-52cd-4b39-8247-b9b27106c77f"",
            ""organization_guid"": ""2e9917a3-52cd-4b39-8247-b9b27106c77f""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""2e9917a3-52cd-4b39-8247-b9b27106c77f""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2e9917a3-52cd-4b39-8247-b9b27106c77f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/786e61f4-71f3-4efd-a3b1-5f598e47a8a9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-58", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("dbdc4767-3439-4e75-8636-a6162c416a58", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("2e9917a3-52cd-4b39-8247-b9b27106c77f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""820d158a-687d-423a-9905-92fe9693225b"",
        ""url"": ""/v2/events/d32f070e-b727-43b0-9eaa-511ed4f5c4a6"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-40"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""774e04fd-7ae7-42ba-b6c0-bf00d100f16f"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-446"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""820d158a-687d-423a-9905-92fe9693225b"",
        ""organization_guid"": ""820d158a-687d-423a-9905-92fe9693225b""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""820d158a-687d-423a-9905-92fe9693225b"",
        ""url"": ""/v2/events/5c0f39c7-317b-42e3-9c34-5382372e8709"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-40"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""774e04fd-7ae7-42ba-b6c0-bf00d100f16f"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-446"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""820d158a-687d-423a-9905-92fe9693225b"",
        ""organization_guid"": ""820d158a-687d-423a-9905-92fe9693225b""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""820d158a-687d-423a-9905-92fe9693225b"",
        ""url"": ""/v2/events/02aaa0b2-f0d4-4b83-9fd5-5fd88fb838ff"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-40"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""774e04fd-7ae7-42ba-b6c0-bf00d100f16f"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-446"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""820d158a-687d-423a-9905-92fe9693225b"",
        ""organization_guid"": ""820d158a-687d-423a-9905-92fe9693225b""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d32f070e-b727-43b0-9eaa-511ed4f5c4a6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-40", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("774e04fd-7ae7-42ba-b6c0-bf00d100f16f", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-446", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5c0f39c7-317b-42e3-9c34-5382372e8709", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-40", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("774e04fd-7ae7-42ba-b6c0-bf00d100f16f", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-446", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/02aaa0b2-f0d4-4b83-9fd5-5fd88fb838ff", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-40", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("774e04fd-7ae7-42ba-b6c0-bf00d100f16f", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-446", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("820d158a-687d-423a-9905-92fe9693225b", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d5603099-5257-46c8-ad45-3af37358941c"",
        ""url"": ""/v2/events/6802aec3-f36c-4e1c-b122-a7377acea5a9"",
        ""created_at"": ""2016-02-11T13:20:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-56"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1b5a84f7-945a-4553-971b-9826646247ad"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-668"",
        ""timestamp"": ""2016-02-11T13:20:28Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-668"",
            ""service_plan_guid"": ""d5603099-5257-46c8-ad45-3af37358941c"",
            ""space_guid"": ""d5603099-5257-46c8-ad45-3af37358941c""
          }
        },
        ""space_guid"": ""d5603099-5257-46c8-ad45-3af37358941c"",
        ""organization_guid"": ""d5603099-5257-46c8-ad45-3af37358941c""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d5603099-5257-46c8-ad45-3af37358941c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6802aec3-f36c-4e1c-b122-a7377acea5a9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-56", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1b5a84f7-945a-4553-971b-9826646247ad", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-668", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:28Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("d5603099-5257-46c8-ad45-3af37358941c", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d5603099-5257-46c8-ad45-3af37358941c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6171f354-9f16-4082-8076-12f476852027"",
        ""url"": ""/v2/events/5149450c-94bb-4160-aa3f-4617b97f582b"",
        ""created_at"": ""2016-02-11T13:20:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""15ab2e56-b548-4aa4-9823-34fe5948b372"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-997"",
        ""actee"": ""414a730f-f86c-41f6-9824-59a2c5fa3f8e"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-14"",
        ""timestamp"": ""2016-02-11T13:20:29Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6171f354-9f16-4082-8076-12f476852027", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/5149450c-94bb-4160-aa3f-4617b97f582b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("15ab2e56-b548-4aa4-9823-34fe5948b372", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-997", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("414a730f-f86c-41f6-9824-59a2c5fa3f8e", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-14", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6bee1d3e-2426-44be-bc53-d5a8d5099799"",
        ""url"": ""/v2/events/3a3ae3d3-8f89-4646-9f93-df7c63581f1a"",
        ""created_at"": ""2016-02-11T13:20:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""47dd3a8b-3c99-469a-a9d4-2f8f3f37849f"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-835"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2016-02-11T13:20:29Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""6bee1d3e-2426-44be-bc53-d5a8d5099799"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6bee1d3e-2426-44be-bc53-d5a8d5099799", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3a3ae3d3-8f89-4646-9f93-df7c63581f1a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("47dd3a8b-3c99-469a-a9d4-2f8f3f37849f", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-835", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bf77ce41-0ce0-45bc-a783-7af90491f3a1"",
        ""url"": ""/v2/events/015ac2db-76dd-4cee-99db-f24e8cac7962"",
        ""created_at"": ""2016-02-11T13:20:27Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-46"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""013e6077-8828-421d-b6fb-d523ee491c54"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2016-02-11T13:20:27Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bf77ce41-0ce0-45bc-a783-7af90491f3a1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/015ac2db-76dd-4cee-99db-f24e8cac7962", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-46", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("013e6077-8828-421d-b6fb-d523ee491c54", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:27Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dfc13354-c58d-46e8-8a0a-7ef93040f1ec"",
        ""url"": ""/v2/events/87e00990-243b-4d3d-9b70-5346d1b20d4a"",
        ""created_at"": ""2016-02-11T13:20:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""36b24f3c-00eb-4de3-89b0-7372a67e0a30"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-889"",
        ""actee"": ""002c39ab-fa45-4b91-a139-9f5f08a19482"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2016-02-11T13:20:29Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dfc13354-c58d-46e8-8a0a-7ef93040f1ec", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/87e00990-243b-4d3d-9b70-5346d1b20d4a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("36b24f3c-00eb-4de3-89b0-7372a67e0a30", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-889", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("002c39ab-fa45-4b91-a139-9f5f08a19482", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""887b2c61-0e0f-43ae-b3ea-e916daad4f74"",
        ""url"": ""/v2/events/ed3e9409-4fe1-4dfd-aa91-eec71b23cac9"",
        ""created_at"": ""2016-02-11T13:20:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-36"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""33b45bf0-a748-439f-b621-c5e25a8f3a91"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2016-02-11T13:20:26Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""887b2c61-0e0f-43ae-b3ea-e916daad4f74"",
        ""organization_guid"": ""887b2c61-0e0f-43ae-b3ea-e916daad4f74""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("887b2c61-0e0f-43ae-b3ea-e916daad4f74", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ed3e9409-4fe1-4dfd-aa91-eec71b23cac9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-36", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("33b45bf0-a748-439f-b621-c5e25a8f3a91", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("887b2c61-0e0f-43ae-b3ea-e916daad4f74", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("887b2c61-0e0f-43ae-b3ea-e916daad4f74", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce5c070b-eafe-4998-8ceb-5f810e2069a1"",
        ""url"": ""/v2/events/ceb184dd-4a49-4ee8-a3f1-2d359d12fd11"",
        ""created_at"": ""2016-02-11T13:20:26Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-32"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""95144bd0-48f4-4e67-b42d-a8caa7f77c00"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-329"",
        ""timestamp"": ""2016-02-11T13:20:26Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN"",
            ""docker_credentials_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""ce5c070b-eafe-4998-8ceb-5f810e2069a1"",
        ""organization_guid"": ""ce5c070b-eafe-4998-8ceb-5f810e2069a1""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ce5c070b-eafe-4998-8ceb-5f810e2069a1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ceb184dd-4a49-4ee8-a3f1-2d359d12fd11", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-32", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("95144bd0-48f4-4e67-b42d-a8caa7f77c00", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-329", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:26Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ce5c070b-eafe-4998-8ceb-5f810e2069a1", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("ce5c070b-eafe-4998-8ceb-5f810e2069a1", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppSshUnauthorizedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8954b5be-3011-41f6-8a14-cc7c7f022afc"",
        ""url"": ""/v2/events/b57ee7b2-0734-4d8e-9149-cb11610f96d4"",
        ""created_at"": ""2016-02-11T13:20:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.ssh-unauthorized"",
        ""actor"": ""uaa-id-70"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e1ffa12c-0cc0-4013-8bb0-30338b5c0137"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-860"",
        ""timestamp"": ""2016-02-11T13:20:29Z"",
        ""metadata"": {
          ""index"": 1
        },
        ""space_guid"": ""8954b5be-3011-41f6-8a14-cc7c7f022afc"",
        ""organization_guid"": ""8954b5be-3011-41f6-8a14-cc7c7f022afc""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppSshUnauthorizedEventsResponse> page = Utilities.DeserializePage<ListAppSshUnauthorizedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8954b5be-3011-41f6-8a14-cc7c7f022afc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/b57ee7b2-0734-4d8e-9149-cb11610f96d4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.ssh-unauthorized", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-70", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e1ffa12c-0cc0-4013-8bb0-30338b5c0137", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-860", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8954b5be-3011-41f6-8a14-cc7c7f022afc", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8954b5be-3011-41f6-8a14-cc7c7f022afc", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""60d590a7-2497-44fd-8a45-7b65e0f5a4cc"",
        ""url"": ""/v2/events/d5864deb-d17a-4742-81de-8f2c6df4ace0"",
        ""created_at"": ""2016-02-11T13:20:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-86"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""c410b932-b864-42f6-8fa4-a633380cc63a"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-1078"",
        ""timestamp"": ""2016-02-11T13:20:30Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""60d590a7-2497-44fd-8a45-7b65e0f5a4cc"",
        ""organization_guid"": ""60d590a7-2497-44fd-8a45-7b65e0f5a4cc""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("60d590a7-2497-44fd-8a45-7b65e0f5a4cc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d5864deb-d17a-4742-81de-8f2c6df4ace0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-86", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("c410b932-b864-42f6-8fa4-a633380cc63a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1078", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:30Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("60d590a7-2497-44fd-8a45-7b65e0f5a4cc", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("60d590a7-2497-44fd-8a45-7b65e0f5a4cc", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""24117dc0-8ab4-4850-b144-4bc6e44af166"",
        ""url"": ""/v2/events/bc89b4d1-d342-42d6-935a-33a2c5978dbd"",
        ""created_at"": ""2016-02-11T13:20:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-74"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""b56e9317-6666-4207-a4df-6a3a87f4c26c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-915"",
        ""timestamp"": ""2016-02-11T13:20:29Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""24117dc0-8ab4-4850-b144-4bc6e44af166"",
        ""organization_guid"": ""24117dc0-8ab4-4850-b144-4bc6e44af166""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("24117dc0-8ab4-4850-b144-4bc6e44af166", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/bc89b4d1-d342-42d6-935a-33a2c5978dbd", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-74", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("b56e9317-6666-4207-a4df-6a3a87f4c26c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-915", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2016-02-11T13:20:29Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("24117dc0-8ab4-4850-b144-4bc6e44af166", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("24117dc0-8ab4-4850-b144-4bc6e44af166", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bd725bf8-15db-41c1-8187-c686b68c75bb"",
        ""url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da"",
        ""created_at"": ""2016-02-11T13:20:38Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1403"",
        ""organization_guid"": ""bd725bf8-15db-41c1-8187-c686b68c75bb"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/c55b4bed-be9e-4cb4-874e-858cfc326194"",
        ""developers_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/developers"",
        ""managers_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/managers"",
        ""auditors_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/auditors"",
        ""apps_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/apps"",
        ""routes_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/routes"",
        ""domains_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/domains"",
        ""service_instances_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/service_instances"",
        ""app_events_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/app_events"",
        ""events_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/events"",
        ""security_groups_url"": ""/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bd725bf8-15db-41c1-8187-c686b68c75bb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:38Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1403", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("bd725bf8-15db-41c1-8187-c686b68c75bb", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/c55b4bed-be9e-4cb4-874e-858cfc326194", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/242115f9-76d9-4fae-beac-9f1050f0a1da/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""05c380c4-2c7e-4ced-bd9b-2a86ca416b44"",
    ""url"": ""/v2/users/uaa-id-215"",
    ""created_at"": ""2016-02-11T13:20:39Z"",
    ""updated_at"": ""2016-02-11T13:20:39Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""05c380c4-2c7e-4ced-bd9b-2a86ca416b44"",
    ""default_space_url"": ""/v2/spaces/bdd0790c-9759-437c-9211-86786047ded7"",
    ""spaces_url"": ""/v2/users/uaa-id-215/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-215/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-215/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-215/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-215/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-215/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-215/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("05c380c4-2c7e-4ced-bd9b-2a86ca416b44", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-215", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("05c380c4-2c7e-4ced-bd9b-2a86ca416b44", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/bdd0790c-9759-437c-9211-86786047ded7", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-215/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-215/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-215/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-215/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-215/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-215/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-215/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
    ""created_at"": ""2016-02-11T13:20:32Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""organizations"": [
      {
        ""metadata"": {
          ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
          ""created_at"": ""2016-02-11T13:20:32Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1155"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1157""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
              ""created_at"": ""2016-02-11T13:20:32Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1156"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
          ""created_at"": ""2016-02-11T13:20:32Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1155"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1157""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
              ""created_at"": ""2016-02-11T13:20:32Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1156"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""billing_managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
          ""created_at"": ""2016-02-11T13:20:32Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1155"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1157""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
              ""created_at"": ""2016-02-11T13:20:32Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1156"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""audited_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
          ""created_at"": ""2016-02-11T13:20:32Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1155"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1157""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
              ""created_at"": ""2016-02-11T13:20:32Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1156"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
                ""created_at"": ""2016-02-11T13:20:32Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""spaces"": [
      {
        ""metadata"": {
          ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
          ""created_at"": ""2016-02-11T13:20:32Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1157""
        }
      }
    ],
    ""managed_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
          ""created_at"": ""2016-02-11T13:20:32Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1157""
        }
      }
    ],
    ""audited_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""71f06865-eda1-450f-879a-bd0825358689"",
          ""created_at"": ""2016-02-11T13:20:32Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1157""
        }
      }
    ]
  }
}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("71f06865-eda1-450f-879a-bd0825358689", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-02-11T13:20:32Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4b76319c-a758-4696-9410-4fa479e2cf1a"",
        ""url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376"",
        ""created_at"": ""2016-02-11T13:20:38Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1378"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""4b76319c-a758-4696-9410-4fa479e2cf1a"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/e042bbf9-cb12-4046-8a64-f30feda76f31"",
        ""spaces_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/spaces"",
        ""domains_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/domains"",
        ""private_domains_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/private_domains"",
        ""users_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/users"",
        ""managers_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/managers"",
        ""billing_managers_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/billing_managers"",
        ""auditors_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/auditors"",
        ""app_events_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4b76319c-a758-4696-9410-4fa479e2cf1a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:38Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1378", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("4b76319c-a758-4696-9410-4fa479e2cf1a", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/e042bbf9-cb12-4046-8a64-f30feda76f31", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/7a029bb5-0faf-4e12-b867-aebb6c21f376/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fe90926c-4418-4dd7-bcea-d5e5542d9791"",
    ""url"": ""/v2/users/uaa-id-166"",
    ""created_at"": ""2016-02-11T13:20:37Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""fe90926c-4418-4dd7-bcea-d5e5542d9791"",
    ""default_space_url"": ""/v2/spaces/637fd96e-ca33-427c-88f9-80595f799244"",
    ""spaces_url"": ""/v2/users/uaa-id-166/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-166/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-166/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-166/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-166/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-166/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-166/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("fe90926c-4418-4dd7-bcea-d5e5542d9791", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-166", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:37Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("fe90926c-4418-4dd7-bcea-d5e5542d9791", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/637fd96e-ca33-427c-88f9-80595f799244", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-166/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-166/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-166/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-166/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-166/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-166/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-166/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e4fb45a8-4139-43dc-9890-c4827f958d6b"",
    ""url"": ""/v2/users/uaa-id-193"",
    ""created_at"": ""2016-02-11T13:20:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""e4fb45a8-4139-43dc-9890-c4827f958d6b"",
    ""default_space_url"": ""/v2/spaces/8424d61c-a909-4c54-a339-10c31ea34a9d"",
    ""spaces_url"": ""/v2/users/uaa-id-193/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-193/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-193/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-193/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-193/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-193/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-193/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("e4fb45a8-4139-43dc-9890-c4827f958d6b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-193", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("e4fb45a8-4139-43dc-9890-c4827f958d6b", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/8424d61c-a909-4c54-a339-10c31ea34a9d", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7bbe1120-93a6-4e6d-8be6-3eee13b32552"",
        ""url"": ""/v2/users/uaa-id-207"",
        ""created_at"": ""2016-02-11T13:20:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""7bbe1120-93a6-4e6d-8be6-3eee13b32552"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/30ca743c-7840-4c24-bcb9-180b5027d8f5"",
        ""spaces_url"": ""/v2/users/uaa-id-207/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-207/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-207/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-207/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-207/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-207/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-207/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""7bbe1120-93a6-4e6d-8be6-3eee13b32552"",
        ""url"": ""/v2/users/uaa-id-208"",
        ""created_at"": ""2016-02-11T13:20:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": true,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-208/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-208/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-208/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-208/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-208/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-208/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-208/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7bbe1120-93a6-4e6d-8be6-3eee13b32552", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-207", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("7bbe1120-93a6-4e6d-8be6-3eee13b32552", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/30ca743c-7840-4c24-bcb9-180b5027d8f5", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-207/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-207/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-207/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-207/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-207/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-207/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-207/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("7bbe1120-93a6-4e6d-8be6-3eee13b32552", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-208", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-208/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-208/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-208/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-208/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-208/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-208/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-208/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""932646c2-8362-415c-9b95-3813c6880a44"",
    ""url"": ""/v2/users/uaa-id-168"",
    ""created_at"": ""2016-02-11T13:20:37Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""932646c2-8362-415c-9b95-3813c6880a44"",
    ""default_space_url"": ""/v2/spaces/a15c5866-c81e-4178-818a-0e3210f6b551"",
    ""spaces_url"": ""/v2/users/uaa-id-168/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-168/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-168/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-168/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-168/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-168/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-168/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("932646c2-8362-415c-9b95-3813c6880a44", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-168", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:37Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("932646c2-8362-415c-9b95-3813c6880a44", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/a15c5866-c81e-4178-818a-0e3210f6b551", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-168/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-168/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-168/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-168/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-168/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-168/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-168/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cfe9fe21-7506-4f44-a68d-16fd5dffcb82"",
        ""url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e"",
        ""created_at"": ""2016-02-11T13:20:38Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1415"",
        ""organization_guid"": ""cfe9fe21-7506-4f44-a68d-16fd5dffcb82"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/a21db1d8-4f66-48a6-b744-8148a3c96ab9"",
        ""developers_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/developers"",
        ""managers_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/managers"",
        ""auditors_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/auditors"",
        ""apps_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/apps"",
        ""routes_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/routes"",
        ""domains_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/domains"",
        ""service_instances_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/service_instances"",
        ""app_events_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/app_events"",
        ""events_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/events"",
        ""security_groups_url"": ""/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cfe9fe21-7506-4f44-a68d-16fd5dffcb82", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:38Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1415", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("cfe9fe21-7506-4f44-a68d-16fd5dffcb82", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/a21db1d8-4f66-48a6-b744-8148a3c96ab9", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/bf3b93d5-ba93-4f2b-aa88-c7fd958a124e/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b01242ca-f6e8-4874-aed3-fb12fea9f11f"",
    ""url"": ""/v2/users/uaa-id-203"",
    ""created_at"": ""2016-02-11T13:20:39Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b01242ca-f6e8-4874-aed3-fb12fea9f11f"",
    ""default_space_url"": ""/v2/spaces/3d5b7d28-d42e-43b8-85ab-4fac474f666e"",
    ""spaces_url"": ""/v2/users/uaa-id-203/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-203/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-203/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-203/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-203/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-203/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-203/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("b01242ca-f6e8-4874-aed3-fb12fea9f11f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-203", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b01242ca-f6e8-4874-aed3-fb12fea9f11f", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/3d5b7d28-d42e-43b8-85ab-4fac474f666e", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-203/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-203/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-203/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-203/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-203/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-203/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-203/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b4fe3bc1-ea04-4905-8455-98934fcbac79"",
    ""url"": ""/v2/users/uaa-id-174"",
    ""created_at"": ""2016-02-11T13:20:37Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b4fe3bc1-ea04-4905-8455-98934fcbac79"",
    ""default_space_url"": ""/v2/spaces/19592487-c261-4ebe-8c62-c9caa86a289c"",
    ""spaces_url"": ""/v2/users/uaa-id-174/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-174/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-174/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-174/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-174/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-174/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-174/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("b4fe3bc1-ea04-4905-8455-98934fcbac79", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-174", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:37Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b4fe3bc1-ea04-4905-8455-98934fcbac79", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/19592487-c261-4ebe-8c62-c9caa86a289c", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-174/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-174/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-174/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-174/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-174/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-174/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-174/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ad67814b-360b-42cb-8e3d-2ef01f0dd704"",
    ""url"": ""/v2/users/uaa-id-186"",
    ""created_at"": ""2016-02-11T13:20:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""ad67814b-360b-42cb-8e3d-2ef01f0dd704"",
    ""default_space_url"": ""/v2/spaces/a145bda8-7bfe-4cd8-8c07-e7998afe8d04"",
    ""spaces_url"": ""/v2/users/uaa-id-186/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-186/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-186/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-186/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-186/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-186/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-186/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("ad67814b-360b-42cb-8e3d-2ef01f0dd704", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-186", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("ad67814b-360b-42cb-8e3d-2ef01f0dd704", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/a145bda8-7bfe-4cd8-8c07-e7998afe8d04", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-186/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-186/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-186/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-186/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-186/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-186/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-186/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""78c79856-864f-42f5-8154-317a19d34fce"",
    ""url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7"",
    ""created_at"": ""2016-02-11T13:20:39Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/spaces"",
    ""organizations_url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/organizations"",
    ""managed_organizations_url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("78c79856-864f-42f5-8154-317a19d34fce", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/01d0d4e1-7da1-4787-982c-5eb2e35708f7/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""905d2574-5fea-4622-a191-abdfcb7fed3f"",
        ""url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70"",
        ""created_at"": ""2016-02-11T13:20:37Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1348"",
        ""organization_guid"": ""905d2574-5fea-4622-a191-abdfcb7fed3f"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/7ebb87ea-31a1-4dcf-86d8-72a5e420cd0d"",
        ""developers_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/developers"",
        ""managers_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/managers"",
        ""auditors_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/auditors"",
        ""apps_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/apps"",
        ""routes_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/routes"",
        ""domains_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/domains"",
        ""service_instances_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/service_instances"",
        ""app_events_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/app_events"",
        ""events_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/events"",
        ""security_groups_url"": ""/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("905d2574-5fea-4622-a191-abdfcb7fed3f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:37Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1348", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("905d2574-5fea-4622-a191-abdfcb7fed3f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/7ebb87ea-31a1-4dcf-86d8-72a5e420cd0d", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/2d36eac1-1060-4e6d-b1bf-188b0b946f70/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e8e34456-7eba-471b-92c0-919a4b9e22b2"",
        ""url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f"",
        ""created_at"": ""2016-02-11T13:20:37Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1311"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""e8e34456-7eba-471b-92c0-919a4b9e22b2"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/37b2b8a2-1d72-45f0-b43a-edad28189869"",
        ""spaces_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/spaces"",
        ""domains_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/domains"",
        ""private_domains_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/private_domains"",
        ""users_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/users"",
        ""managers_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/managers"",
        ""billing_managers_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/billing_managers"",
        ""auditors_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/auditors"",
        ""app_events_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e8e34456-7eba-471b-92c0-919a4b9e22b2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:37Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1311", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("e8e34456-7eba-471b-92c0-919a4b9e22b2", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/37b2b8a2-1d72-45f0-b43a-edad28189869", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ec5bd903-9069-42f1-b8ee-a845c33b715f/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d53c05d8-277f-4e36-84df-2bdfd32cc080"",
        ""url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788"",
        ""created_at"": ""2016-02-11T13:20:38Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1369"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""d53c05d8-277f-4e36-84df-2bdfd32cc080"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/1078658c-120f-4075-8203-3f13cb6ccb9d"",
        ""spaces_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/spaces"",
        ""domains_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/domains"",
        ""private_domains_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/private_domains"",
        ""users_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/users"",
        ""managers_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/managers"",
        ""billing_managers_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/billing_managers"",
        ""auditors_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/auditors"",
        ""app_events_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d53c05d8-277f-4e36-84df-2bdfd32cc080", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:38Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1369", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("d53c05d8-277f-4e36-84df-2bdfd32cc080", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/1078658c-120f-4075-8203-3f13cb6ccb9d", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/2c7d1e8a-f503-4297-87a9-6f0bdb78e788/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""667d9d13-6bef-47c1-bd6d-7370abd8d92f"",
    ""url"": ""/v2/users/uaa-id-199"",
    ""created_at"": ""2016-02-11T13:20:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""667d9d13-6bef-47c1-bd6d-7370abd8d92f"",
    ""default_space_url"": ""/v2/spaces/1dbffe3b-0043-4f83-8956-2e0a45f3d6f5"",
    ""spaces_url"": ""/v2/users/uaa-id-199/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-199/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-199/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-199/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-199/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-199/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-199/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("667d9d13-6bef-47c1-bd6d-7370abd8d92f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-199", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("667d9d13-6bef-47c1-bd6d-7370abd8d92f", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/1dbffe3b-0043-4f83-8956-2e0a45f3d6f5", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-199/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-199/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-199/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-199/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-199/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-199/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-199/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8e15e68f-f67d-4cfd-8268-7269ec720d07"",
        ""url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0"",
        ""created_at"": ""2016-02-11T13:20:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1458"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""8e15e68f-f67d-4cfd-8268-7269ec720d07"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/128039cf-53b2-45fb-aaea-58c9f74b6b31"",
        ""spaces_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/spaces"",
        ""domains_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/domains"",
        ""private_domains_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/private_domains"",
        ""users_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/users"",
        ""managers_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/managers"",
        ""billing_managers_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/billing_managers"",
        ""auditors_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/auditors"",
        ""app_events_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8e15e68f-f67d-4cfd-8268-7269ec720d07", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1458", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("8e15e68f-f67d-4cfd-8268-7269ec720d07", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/128039cf-53b2-45fb-aaea-58c9f74b6b31", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/0413ccd8-cbab-47e2-8f7e-0e57e27617e0/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b03030c0-7e4d-49c4-9d14-9cf948db8dde"",
    ""url"": ""/v2/users/uaa-id-213"",
    ""created_at"": ""2016-02-11T13:20:39Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b03030c0-7e4d-49c4-9d14-9cf948db8dde"",
    ""default_space_url"": ""/v2/spaces/2996d735-76d5-43c3-a39c-22787ceb8954"",
    ""spaces_url"": ""/v2/users/uaa-id-213/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-213/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-213/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-213/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-213/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-213/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-213/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("b03030c0-7e4d-49c4-9d14-9cf948db8dde", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-213", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:39Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b03030c0-7e4d-49c4-9d14-9cf948db8dde", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/2996d735-76d5-43c3-a39c-22787ceb8954", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-213/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-213/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-213/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-213/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-213/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-213/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-213/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestDisassociateUserWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""508a4f83-0916-4c10-acdc-4a57dca1093b"",
    ""url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb"",
    ""created_at"": ""2016-02-11T13:20:43Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1633"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""508a4f83-0916-4c10-acdc-4a57dca1093b"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/d4155967-2e18-4c7a-b538-fb0992766a6a"",
    ""spaces_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/spaces"",
    ""domains_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/domains"",
    ""private_domains_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/private_domains"",
    ""users_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/users"",
    ""managers_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/managers"",
    ""billing_managers_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/billing_managers"",
    ""auditors_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/auditors"",
    ""app_events_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/space_quota_definitions""
  }
}";

            DisassociateUserWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<DisassociateUserWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("508a4f83-0916-4c10-acdc-4a57dca1093b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:43Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1633", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("508a4f83-0916-4c10-acdc-4a57dca1093b", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/d4155967-2e18-4c7a-b538-fb0992766a6a", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/2f12e6d8-cc69-4cbc-a680-69f92d0a7dcb/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dad31de5-0cb9-4bb3-807b-4485b67ec91a"",
        ""url"": ""/v2/space_quota_definitions/8fe1740e-0c31-42da-a697-92b1d1c54ac6"",
        ""created_at"": ""2016-02-11T13:20:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1589"",
        ""organization_guid"": ""dad31de5-0cb9-4bb3-807b-4485b67ec91a"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""app_instance_limit"": -1,
        ""organization_url"": ""/v2/organizations/e61aada1-67fc-4350-b448-0c857731ce01"",
        ""spaces_url"": ""/v2/space_quota_definitions/8fe1740e-0c31-42da-a697-92b1d1c54ac6/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dad31de5-0cb9-4bb3-807b-4485b67ec91a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/8fe1740e-0c31-42da-a697-92b1d1c54ac6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1589", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("dad31de5-0cb9-4bb3-807b-4485b67ec91a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].AppInstanceLimit), true);
            Assert.AreEqual("/v2/organizations/e61aada1-67fc-4350-b448-0c857731ce01", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/8fe1740e-0c31-42da-a697-92b1d1c54ac6/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a917acf3-01aa-44f4-93b9-9c4066015b0d"",
        ""url"": ""/v2/private_domains/a107b984-4004-4541-bee5-0ce101c8e684"",
        ""created_at"": ""2016-02-11T13:20:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-44.example.com"",
        ""owning_organization_guid"": ""a917acf3-01aa-44f4-93b9-9c4066015b0d"",
        ""owning_organization_url"": ""/v2/organizations/81ea7386-4a9e-4b5d-b8e7-a15d220d3591"",
        ""shared_organizations_url"": ""/v2/private_domains/a107b984-4004-4541-bee5-0ce101c8e684/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a917acf3-01aa-44f4-93b9-9c4066015b0d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/a107b984-4004-4541-bee5-0ce101c8e684", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-44.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("a917acf3-01aa-44f4-93b9-9c4066015b0d", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/81ea7386-4a9e-4b5d-b8e7-a15d220d3591", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/a107b984-4004-4541-bee5-0ce101c8e684/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7bba6d13-9df3-4933-9e5e-72683ad0aec0"",
        ""url"": ""/v2/services/f8b796f0-c2f5-4821-b6ad-f29307f660f0"",
        ""created_at"": ""2016-02-11T13:20:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-57"",
        ""provider"": null,
        ""url"": null,
        ""description"": ""desc-98"",
        ""long_description"": null,
        ""version"": null,
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""df5dfb7d-748f-4433-bc46-bdf713544729"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": ""7bba6d13-9df3-4933-9e5e-72683ad0aec0"",
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/f8b796f0-c2f5-4821-b6ad-f29307f660f0/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7bba6d13-9df3-4933-9e5e-72683ad0aec0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/f8b796f0-c2f5-4821-b6ad-f29307f660f0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-57", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-98", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("df5dfb7d-748f-4433-bc46-bdf713544729", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("7bba6d13-9df3-4933-9e5e-72683ad0aec0", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/f8b796f0-c2f5-4821-b6ad-f29307f660f0/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationInstanceUsageResponse()
        {
            string json = @"{
  ""instance_usage"": 3
}";

            RetrievingOrganizationInstanceUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationInstanceUsageResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(obj.InstanceUsage), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0a7458c2-1e7d-4c42-bbfc-fb1d44d5a738"",
    ""url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4"",
    ""created_at"": ""2016-02-11T13:20:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1617"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""0a7458c2-1e7d-4c42-bbfc-fb1d44d5a738"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/e925da39-861e-4276-837c-7e325f492da8"",
    ""spaces_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/spaces"",
    ""domains_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/domains"",
    ""private_domains_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/private_domains"",
    ""users_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/users"",
    ""managers_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/managers"",
    ""billing_managers_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/billing_managers"",
    ""auditors_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/auditors"",
    ""app_events_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("0a7458c2-1e7d-4c42-bbfc-fb1d44d5a738", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1617", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("0a7458c2-1e7d-4c42-bbfc-fb1d44d5a738", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/e925da39-861e-4276-837c-7e325f492da8", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/4ffd26d6-7445-4af1-924b-bba98e4068d4/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7a1b38eb-e0f2-44a0-861d-25c948657d9e"",
    ""url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90"",
    ""created_at"": ""2016-02-11T13:20:41Z"",
    ""updated_at"": ""2016-02-11T13:20:41Z""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""7a1b38eb-e0f2-44a0-861d-25c948657d9e"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/89a69a23-09d0-4076-87e6-d4dcb750d810"",
    ""spaces_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/spaces"",
    ""domains_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/domains"",
    ""private_domains_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/private_domains"",
    ""users_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/users"",
    ""managers_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/managers"",
    ""billing_managers_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/billing_managers"",
    ""auditors_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/auditors"",
    ""app_events_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("7a1b38eb-e0f2-44a0-861d-25c948657d9e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("7a1b38eb-e0f2-44a0-861d-25c948657d9e", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/89a69a23-09d0-4076-87e6-d4dcb750d810", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e987fae1-d941-4dcc-bbac-92b9c10c2c90/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b88016a2-65a6-40fd-8359-1ea0d2c53dc0"",
    ""url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a"",
    ""created_at"": ""2016-02-11T13:20:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1611"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""b88016a2-65a6-40fd-8359-1ea0d2c53dc0"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/10684f0e-6374-4e4b-845a-2dae8b2e996a"",
    ""spaces_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/spaces"",
    ""domains_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/domains"",
    ""private_domains_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/private_domains"",
    ""users_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/users"",
    ""managers_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/managers"",
    ""billing_managers_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/auditors"",
    ""app_events_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("b88016a2-65a6-40fd-8359-1ea0d2c53dc0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1611", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("b88016a2-65a6-40fd-8359-1ea0d2c53dc0", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/10684f0e-6374-4e4b-845a-2dae8b2e996a", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/4a057bcd-4b74-49ff-b719-6a380d97cf5a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""00dc6d0f-e25c-46ca-8fd5-5ba701bfd2ee"",
    ""url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66"",
    ""created_at"": ""2016-02-11T13:20:43Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1635"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""00dc6d0f-e25c-46ca-8fd5-5ba701bfd2ee"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/a45df96b-0b93-41c2-8dc2-36767540f383"",
    ""spaces_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/spaces"",
    ""domains_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/domains"",
    ""private_domains_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/private_domains"",
    ""users_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/users"",
    ""managers_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/managers"",
    ""billing_managers_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/billing_managers"",
    ""auditors_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/auditors"",
    ""app_events_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("00dc6d0f-e25c-46ca-8fd5-5ba701bfd2ee", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:43Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1635", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("00dc6d0f-e25c-46ca-8fd5-5ba701bfd2ee", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/a45df96b-0b93-41c2-8dc2-36767540f383", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e85e05a2-1542-457b-a53a-b7e4e33d9c66/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""87f35379-adeb-4049-94f4-ea1e8b9603fb"",
        ""url"": ""/v2/users/uaa-id-264"",
        ""created_at"": ""2016-02-11T13:20:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""auditor@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-264/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-264/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-264/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-264/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-264/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-264/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-264/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("87f35379-adeb-4049-94f4-ea1e8b9603fb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-264", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("auditor@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-264/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-264/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-264/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-264/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-264/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-264/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-264/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestDisassociateManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""26443ab5-bc83-4b79-a68f-efb57362a207"",
    ""url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86"",
    ""created_at"": ""2016-02-11T13:20:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1623"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""26443ab5-bc83-4b79-a68f-efb57362a207"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/8f7a01d1-fb1b-48f1-a810-95b043dd8a69"",
    ""spaces_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/spaces"",
    ""domains_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/domains"",
    ""private_domains_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/private_domains"",
    ""users_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/users"",
    ""managers_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/managers"",
    ""billing_managers_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/billing_managers"",
    ""auditors_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/auditors"",
    ""app_events_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/space_quota_definitions""
  }
}";

            DisassociateManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<DisassociateManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("26443ab5-bc83-4b79-a68f-efb57362a207", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1623", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("26443ab5-bc83-4b79-a68f-efb57362a207", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/8f7a01d1-fb1b-48f1-a810-95b043dd8a69", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e774620b-3fa6-4699-9c73-6c1dce717d86/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""46f7cbb1-37e7-42df-bf64-1b828a728c9e"",
        ""url"": ""/v2/users/uaa-id-246"",
        ""created_at"": ""2016-02-11T13:20:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""billing_manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-246/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-246/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-246/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-246/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-246/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-246/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-246/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("46f7cbb1-37e7-42df-bf64-1b828a728c9e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-246", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("billing_manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-246/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-246/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-246/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-246/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-246/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-246/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-246/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e6318a4f-bb98-4b7b-b6ef-82ddddf75d10"",
    ""url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d"",
    ""created_at"": ""2016-02-11T13:20:43Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1627"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e6318a4f-bb98-4b7b-b6ef-82ddddf75d10"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/d15388d6-7eb6-4e4e-b381-a29e57c9589c"",
    ""spaces_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/spaces"",
    ""domains_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/domains"",
    ""private_domains_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/private_domains"",
    ""users_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/users"",
    ""managers_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/managers"",
    ""billing_managers_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/billing_managers"",
    ""auditors_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/auditors"",
    ""app_events_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("e6318a4f-bb98-4b7b-b6ef-82ddddf75d10", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:43Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1627", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e6318a4f-bb98-4b7b-b6ef-82ddddf75d10", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/d15388d6-7eb6-4e4e-b381-a29e57c9589c", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/701d8dd3-2bd3-4fe8-b0f2-2dd9510c989d/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{
  ""memory_usage_in_mb"": 0
}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7ce74bd4-8027-4e34-bfc2-5f45b7d7e5cf"",
    ""url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd"",
    ""created_at"": ""2016-02-11T13:20:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1582"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""7ce74bd4-8027-4e34-bfc2-5f45b7d7e5cf"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/4630fc4c-f86a-4517-b6d6-c0545188ff17"",
    ""spaces_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/spaces"",
    ""domains_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/domains"",
    ""private_domains_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/private_domains"",
    ""users_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/users"",
    ""managers_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/managers"",
    ""billing_managers_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/billing_managers"",
    ""auditors_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/auditors"",
    ""app_events_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("7ce74bd4-8027-4e34-bfc2-5f45b7d7e5cf", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1582", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("7ce74bd4-8027-4e34-bfc2-5f45b7d7e5cf", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/4630fc4c-f86a-4517-b6d6-c0545188ff17", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/e464d58f-1908-405b-8ca8-159071782cfd/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f1410d26-29d8-48d4-b144-7b8c19fa545b"",
    ""url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8"",
    ""created_at"": ""2016-02-11T13:20:43Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1639"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""f1410d26-29d8-48d4-b144-7b8c19fa545b"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/5c70761f-45d1-4dea-9120-135c0dbc5a75"",
    ""spaces_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/spaces"",
    ""domains_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/domains"",
    ""private_domains_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/private_domains"",
    ""users_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/users"",
    ""managers_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/managers"",
    ""billing_managers_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/billing_managers"",
    ""auditors_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/auditors"",
    ""app_events_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("f1410d26-29d8-48d4-b144-7b8c19fa545b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:43Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1639", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("f1410d26-29d8-48d4-b144-7b8c19fa545b", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/5c70761f-45d1-4dea-9120-135c0dbc5a75", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/fb1eec44-bb17-43c0-bd5f-4b218467c3e8/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8def7dee-9cf7-41bd-b27e-d680a3268fb4"",
        ""url"": ""/v2/users/uaa-id-278"",
        ""created_at"": ""2016-02-11T13:20:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-278/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-278/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-278/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-278/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-278/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-278/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-278/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8def7dee-9cf7-41bd-b27e-d680a3268fb4"",
        ""url"": ""/v2/users/uaa-id-279"",
        ""created_at"": ""2016-02-11T13:20:42Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-279/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-279/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-279/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-279/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-279/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-279/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-279/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8def7dee-9cf7-41bd-b27e-d680a3268fb4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-278", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-278/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-278/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-278/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-278/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-278/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-278/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-278/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("8def7dee-9cf7-41bd-b27e-d680a3268fb4", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-279", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-279/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-279/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-279/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-279/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-279/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-279/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-279/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestDisassociateBillingManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e06d318f-0ab9-4355-a21c-acefbd7a596d"",
    ""url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067"",
    ""created_at"": ""2016-02-11T13:20:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1576"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e06d318f-0ab9-4355-a21c-acefbd7a596d"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/a9aef1fd-70ca-458d-b290-fa2c985cf191"",
    ""spaces_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/spaces"",
    ""domains_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/domains"",
    ""private_domains_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/private_domains"",
    ""users_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/users"",
    ""managers_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/managers"",
    ""billing_managers_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/billing_managers"",
    ""auditors_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/auditors"",
    ""app_events_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/space_quota_definitions""
  }
}";

            DisassociateBillingManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<DisassociateBillingManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("e06d318f-0ab9-4355-a21c-acefbd7a596d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1576", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e06d318f-0ab9-4355-a21c-acefbd7a596d", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/a9aef1fd-70ca-458d-b290-fa2c985cf191", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/028e26ae-5fdc-437c-aaaf-b922a7110067/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e62444d8-d5b0-4289-9dd7-fda1cd93de78"",
        ""url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29"",
        ""created_at"": ""2016-02-11T13:20:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""e62444d8-d5b0-4289-9dd7-fda1cd93de78"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/49e6300b-a9da-4947-bc14-7f0ac3fe62f4"",
        ""spaces_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/spaces"",
        ""domains_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/domains"",
        ""private_domains_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/private_domains"",
        ""users_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/users"",
        ""managers_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/managers"",
        ""billing_managers_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/billing_managers"",
        ""auditors_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/auditors"",
        ""app_events_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e62444d8-d5b0-4289-9dd7-fda1cd93de78", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("e62444d8-d5b0-4289-9dd7-fda1cd93de78", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/49e6300b-a9da-4947-bc14-7f0ac3fe62f4", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ccc62298-2290-4f3c-8174-13437d838b29/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2f3f313b-5358-489a-a495-974b8f572dc1"",
        ""url"": ""/v2/users/uaa-id-296"",
        ""created_at"": ""2016-02-11T13:20:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""user@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-296/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-296/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-296/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-296/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-296/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-296/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-296/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2f3f313b-5358-489a-a495-974b8f572dc1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-296", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-296/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-296/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-296/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-296/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-296/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-296/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-296/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""549ba1eb-8588-4840-ba5c-026824b12eb8"",
        ""url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12"",
        ""created_at"": ""2016-02-11T13:20:41Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1586"",
        ""organization_guid"": ""549ba1eb-8588-4840-ba5c-026824b12eb8"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/0a0e2c4a-0cb5-4347-a4f6-7a4cae31e57d"",
        ""developers_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/developers"",
        ""managers_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/managers"",
        ""auditors_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/auditors"",
        ""apps_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/apps"",
        ""routes_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/routes"",
        ""domains_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/domains"",
        ""service_instances_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/service_instances"",
        ""app_events_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/app_events"",
        ""events_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/events"",
        ""security_groups_url"": ""/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("549ba1eb-8588-4840-ba5c-026824b12eb8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1586", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("549ba1eb-8588-4840-ba5c-026824b12eb8", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/0a0e2c4a-0cb5-4347-a4f6-7a4cae31e57d", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/fd9333b8-b1dd-451c-8376-3c23f3cffd12/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingRolesOfAllUsersInOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/organizations/6e3683b0-ef57-4d4f-a21b-5cfc77001119/user_roles?order-direction=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""15c1064b-aa9b-4460-9ff8-c7b7da9e009d"",
        ""url"": ""/v2/users/uaa-id-289"",
        ""created_at"": ""2016-02-11T13:20:43Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": 0,
        ""active"": 0,
        ""default_space_guid"": null,
        ""username"": ""everything@example.com"",
        ""organization_roles"": [
          ""org_user"",
          ""org_manager"",
          ""org_auditor"",
          ""billing_manager""
        ],
        ""spaces_url"": ""/v2/users/uaa-id-289/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-289/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-289/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-289/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-289/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-289/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-289/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<RetrievingRolesOfAllUsersInOrganizationResponse> page = Utilities.DeserializePage<RetrievingRolesOfAllUsersInOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("/v2/organizations/6e3683b0-ef57-4d4f-a21b-5cfc77001119/user_roles?order-direction=asc=2=1", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("15c1064b-aa9b-4460-9ff8-c7b7da9e009d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-289", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:43Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("everything@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-289/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-289/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""aa533541-10d2-4328-b304-7db3315766f8"",
    ""url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a"",
    ""created_at"": ""2016-02-11T13:20:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1621"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""aa533541-10d2-4328-b304-7db3315766f8"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/3364fb68-9587-4b86-bdf1-c3b4ca397b07"",
    ""spaces_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/spaces"",
    ""domains_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/domains"",
    ""private_domains_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/private_domains"",
    ""users_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/users"",
    ""managers_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/managers"",
    ""billing_managers_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/billing_managers"",
    ""auditors_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/auditors"",
    ""app_events_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("aa533541-10d2-4328-b304-7db3315766f8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1621", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("aa533541-10d2-4328-b304-7db3315766f8", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/3364fb68-9587-4b86-bdf1-c3b4ca397b07", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/c1715fc1-f8db-4175-8317-612d4098420a/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e9892754-0946-4852-b6b9-663fbefc2346"",
    ""url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2"",
    ""created_at"": ""2016-02-11T13:20:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1574"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e9892754-0946-4852-b6b9-663fbefc2346"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/116c7d75-afa9-4d06-8a7f-57061bbb0460"",
    ""spaces_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/spaces"",
    ""domains_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/domains"",
    ""private_domains_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/private_domains"",
    ""users_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/users"",
    ""managers_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/managers"",
    ""billing_managers_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/billing_managers"",
    ""auditors_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/auditors"",
    ""app_events_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("e9892754-0946-4852-b6b9-663fbefc2346", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1574", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e9892754-0946-4852-b6b9-663fbefc2346", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/116c7d75-afa9-4d06-8a7f-57061bbb0460", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/277954a4-9723-469b-a939-93da67bc86e2/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociatePrivateDomainWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8ddf7e1e-6c9d-4121-b81e-99e6b4a040a9"",
    ""url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce"",
    ""created_at"": ""2016-02-11T13:20:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1594"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""8ddf7e1e-6c9d-4121-b81e-99e6b4a040a9"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/6344a4ec-6411-4ee8-9e31-92b00cbe4a56"",
    ""spaces_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/spaces"",
    ""domains_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/domains"",
    ""private_domains_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/private_domains"",
    ""users_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/users"",
    ""managers_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/managers"",
    ""billing_managers_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/billing_managers"",
    ""auditors_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/auditors"",
    ""app_events_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/space_quota_definitions""
  }
}";

            AssociatePrivateDomainWithOrganizationResponse obj = Utilities.DeserializeJson<AssociatePrivateDomainWithOrganizationResponse>(json);

            Assert.AreEqual("8ddf7e1e-6c9d-4121-b81e-99e6b4a040a9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1594", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("8ddf7e1e-6c9d-4121-b81e-99e6b4a040a9", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/6344a4ec-6411-4ee8-9e31-92b00cbe4a56", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/cb146f31-e74b-422f-af70-75e9a0dfa0ce/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c96171b9-3002-4214-895c-620687005e12"",
        ""url"": ""/v2/domains/dde794bb-114b-4be7-af29-633411c456ea"",
        ""created_at"": ""2016-02-11T13:20:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c96171b9-3002-4214-895c-620687005e12"",
        ""url"": ""/v2/domains/54c555fb-bab4-447c-a9a0-0268bf6bc8fb"",
        ""created_at"": ""2016-02-11T13:20:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c96171b9-3002-4214-895c-620687005e12", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/dde794bb-114b-4be7-af29-633411c456ea", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("c96171b9-3002-4214-895c-620687005e12", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/54c555fb-bab4-447c-a9a0-0268bf6bc8fb", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:23Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
        }

        [TestMethod]
        public void TestDisassociateAuditorWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cb198d9c-679d-4974-989f-e134a44affc7"",
    ""url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78"",
    ""created_at"": ""2016-02-11T13:20:42Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1613"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""cb198d9c-679d-4974-989f-e134a44affc7"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/4c6d77cd-85bf-4566-a0e5-3c68a0410ea4"",
    ""spaces_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/spaces"",
    ""domains_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/domains"",
    ""private_domains_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/private_domains"",
    ""users_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/users"",
    ""managers_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/managers"",
    ""billing_managers_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/billing_managers"",
    ""auditors_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/auditors"",
    ""app_events_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/space_quota_definitions""
  }
}";

            DisassociateAuditorWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<DisassociateAuditorWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("cb198d9c-679d-4974-989f-e134a44affc7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:42Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1613", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("cb198d9c-679d-4974-989f-e134a44affc7", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/4c6d77cd-85bf-4566-a0e5-3c68a0410ea4", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/618ddb80-feab-466e-b9a1-ef91f5020a78/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{
  ""guid"": ""28941b5d-aa08-4177-aca1-27aeac7f46b2"",
  ""name"": ""name-1716"",
  ""status"": ""active"",
  ""spaces"": [
    {
      ""guid"": ""28941b5d-aa08-4177-aca1-27aeac7f46b2"",
      ""name"": ""name-1718"",
      ""service_count"": 0,
      ""app_count"": 0,
      ""mem_dev_total"": 0,
      ""mem_prod_total"": 0
    }
  ]
}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("28941b5d-aa08-4177-aca1-27aeac7f46b2", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1716", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a342b13f-1751-4ef1-9ada-81b73581c735"",
    ""url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2"",
    ""created_at"": ""2016-02-11T13:20:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""a342b13f-1751-4ef1-9ada-81b73581c735"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/ef59abe2-5faf-4cd0-b9d6-3cbc86d5ae2d"",
    ""spaces_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/spaces"",
    ""domains_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/domains"",
    ""private_domains_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/private_domains"",
    ""users_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/users"",
    ""managers_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/managers"",
    ""billing_managers_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/billing_managers"",
    ""auditors_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/auditors"",
    ""app_events_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("a342b13f-1751-4ef1-9ada-81b73581c735", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("a342b13f-1751-4ef1-9ada-81b73581c735", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/ef59abe2-5faf-4cd0-b9d6-3cbc86d5ae2d", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/15f50a2a-95c0-4f8a-bce3-965623751ed2/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""17dcc129-e894-4054-8bcb-3ebe9f3b6da9"",
    ""url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38"",
    ""created_at"": ""2016-02-11T13:20:41Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1567"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""17dcc129-e894-4054-8bcb-3ebe9f3b6da9"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/f92f1839-bea4-4fb5-88b3-7505ee66f0a4"",
    ""spaces_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/spaces"",
    ""domains_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/domains"",
    ""private_domains_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/private_domains"",
    ""users_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/users"",
    ""managers_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/managers"",
    ""billing_managers_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/billing_managers"",
    ""auditors_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/auditors"",
    ""app_events_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("17dcc129-e894-4054-8bcb-3ebe9f3b6da9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-11T13:20:41Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1567", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("17dcc129-e894-4054-8bcb-3ebe9f3b6da9", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/f92f1839-bea4-4fb5-88b3-7505ee66f0a4", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ea8ee0bd-d0df-484f-8788-ad6973f32f38/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }
    }
}
